events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$upstream_addr"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=libp2p:10m rate=50r/s;

    # Redis connection for session persistence
    upstream redis_backend {
        server redis:6379;
        keepalive 16;
    }

    # Go backend upstream
    upstream go_backend {
        server go-backend:8080;
        keepalive 32;
    }

    # LibP2P nodes upstream with session persistence
    upstream libp2p_nodes {
        ip_hash;  # Enable session persistence for P2P connections
        server go-libp2p-node-1:4001;
        server go-libp2p-node-2:4002;
        server go-libp2p-node-3:4003;
        keepalive 64;
    }

    # WebSocket upstream for libp2p connections
    upstream libp2p_websocket {
        ip_hash;  # Sticky sessions for WebSocket connections
        server go-libp2p-node-1:4004;
        server go-libp2p-node-2:4005;
        server go-libp2p-node-3:4006;
        keepalive 64;
    }

    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Static files
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check
        location /health {
            proxy_pass http://go_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # LibP2P WebSocket connections
        location /libp2p/ws {
            limit_req zone=libp2p burst=100 nodelay;
            
            proxy_pass http://libp2p_websocket;
            
            # WebSocket specific headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for WebSocket connections
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Prevent proxy buffering
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # LibP2P TCP connections
        location /libp2p/ {
            limit_req zone=libp2p burst=100 nodelay;
            
            proxy_pass http://libp2p_nodes;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
            
            # P2P connection optimizations
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # API endpoints with rate limiting
        location /iauth {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://go_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /iwebapp {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://go_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redis health check endpoint
        location /redis/health {
            access_log off;
            return 200 "Redis proxy healthy\n";
            add_header Content-Type text/plain;
        }

        # All other requests to Go backend
        location / {
            proxy_pass http://go_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;
        }
    }
}

# TCP/UDP proxy for direct libp2p connections
stream {
    # LibP2P TCP load balancing
    upstream libp2p_tcp {
        server go-libp2p-node-1:4001;
        server go-libp2p-node-2:4002;
        server go-libp2p-node-3:4003;
    }

    # LibP2P QUIC load balancing
    upstream libp2p_quic {
        server go-libp2p-node-1:4001;
        server go-libp2p-node-2:4002;
        server go-libp2p-node-3:4003;
    }

    server {
        listen 4001;
        proxy_pass libp2p_tcp;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/libp2p_tcp.log;
    }

    server {
        listen 4001 udp;
        proxy_pass libp2p_quic;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/libp2p_quic.log;
    }
}
