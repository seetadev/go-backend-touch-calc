version: '3.8'

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  go-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - PORT=8080
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET:-aspiring-cloud-storage}
      - FROM_EMAIL=${FROM_EMAIL:-aspiring.investments@gmail.com}
      - STORAGE_BACKEND=${STORAGE_BACKEND:-redis}
      - REDIS_URL=redis://redis:6379
      - MONGO_URI=${MONGO_URI:-mongodb://mongodb:27017}
      - MONGO_DATABASE=${MONGO_DATABASE:-touchcalc}
      - MYSQL_DSN=${MYSQL_DSN:-root:password@tcp(mysql:3306)/touchcalc}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT:-minio:9000}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET=${MINIO_BUCKET:-touchcalc-storage}
      - MINIO_SSL=${MINIO_SSL:-false}
    env_file:
      - .env
    volumes:
      - ./webappTemplates:/root/webappTemplates:ro
      - ./web/templates:/root/web/templates:ro
      - ./web/static:/root/web/static:ro
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
      - mysql
      - minio
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # LibP2P Node 1
  go-libp2p-node-1:
    build:
      context: ./go-libp2p-node
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
      - "4004:4004"
    environment:
      - NODE_ID=1
      - LISTEN_ADDRESSES=/ip4/0.0.0.0/tcp/4001,/ip4/0.0.0.0/tcp/4004/ws
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - default

  # LibP2P Node 2
  go-libp2p-node-2:
    build:
      context: ./go-libp2p-node
      dockerfile: Dockerfile
    ports:
      - "4002:4002"
      - "4005:4005"
    environment:
      - NODE_ID=2
      - LISTEN_ADDRESSES=/ip4/0.0.0.0/tcp/4002,/ip4/0.0.0.0/tcp/4005/ws
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - default

  # LibP2P Node 3
  go-libp2p-node-3:
    build:
      context: ./go-libp2p-node
      dockerfile: Dockerfile
    ports:
      - "4003:4003"
      - "4006:4006"
    environment:
      - NODE_ID=3
      - LISTEN_ADDRESSES=/ip4/0.0.0.0/tcp/4003,/ip4/0.0.0.0/tcp/4006/ws
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - default

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
      - "4001:4001"
      - "4001:4001/udp"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web/static:/usr/share/nginx/html/static:ro
    depends_on:
      - go-backend
      - go-libp2p-node-1
      - go-libp2p-node-2
      - go-libp2p-node-3
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB service
  mongodb:
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=touchcalc
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MySQL service 
  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=touchcalc
      - MYSQL_USER=touchcalc
      - MYSQL_PASSWORD=touchcalc
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO service
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  mongodb_data:
  mysql_data:
  minio_data:
  redis_data:

networks:
  default:
    name: tornado-nginx-go-network
